from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from langchain_community.llms import Ollama
import streamlit as st
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Set environment variables (uncomment if needed)
# os.environ["OPENAI_API_KEY"] = os.getenv("OPENAI_API_KEY")
os.environ["LANGCHAIN_TRACING_V2"] = "true"
os.environ["LANGCHAIN_API_KEY"] = "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"

# Prompt template with a better structure
prompt = ChatPromptTemplate.from_messages(
    [("system", 'You are an advanced AI language model, specializing in text analysis and natural language processing.'
                'You are equipped with extensive knowledge of linguistic patterns, syntax, and common traits of '
                'AI-generated text, including but not limited to repetition, lack of deep context, unusual phrase '
                'constructions, and other subtle cues that differentiate human-written from machine-generated '
                'content.'
                'You are meticulous, analytical, and detail-oriented, with a focus on accuracy and thoroughness in '
                'identifying nuanced differences between human and AI-generated text. You are unbiased and objective '
                'in your evaluations.'
                'Text Analysis: Break down the given text into sentences, phrases, and individual word choices.'
                'Pattern Recognition: Identify common AI-generated patterns, such as repetition, unusual word usage, '
                'or lack of context.'
                'Contextual Understanding: Compare the textâ€™s context and coherence with typical human expression.'
                'Verdict Formation: Based on the analysis, determine whether the text is likely AI-generated or '
                'human-written.'
                'Confidence Level: Assign a confidence level to your detection based on the identified traits and '
                'patterns.'
                'Analyze the given text and determine whether it was generated by AI or written by a human.'
                'To accurately detect AI-generated text and provide a reasoned justification for your conclusion, '
                'enhancing the ability to distinguish between human and machine-produced content.'
                'Analysis: Provide a detailed breakdown of your findings.'
                'Verdict: Indicate whether the text is AI-generated or human-written.'
                'Confidence Level: Assign a confidence percentage to your verdict.'
                'Justification: Explain the key factors that led to your conclusion.'),
     ("user", "{question}")
     ]
)

# Streamlit framework setup
st.title('AI Text Detection')
input_text = st.text_input("Enter the text.")

# Llama LLM setup
llm = Ollama(model="llama2")
output_parser = StrOutputParser()
chain = prompt | llm | output_parser

# Process input and display output
if input_text:
    response = chain.invoke({"question": input_text})
    st.write(response)
